../lab01/ex4_ansi.c:15:        printf("error: %s could not be opened\n", argv[1]);
../lab01/ex4_ansi.c:21:        printf("error: %s could not be written\n", argv[2]);
../lab01/ex4_ansi.c:32:    printf("Copy done\n");
../lab01/ex4_ansi.c:9:        printf("Usage: %s <src> <dest>\n", argv[0]);
../lab01/ex4.c:15:        printf("error: %s could not be opened\n", argv[1]);
../lab01/ex4.c:21:        printf("error: %s could not be written\n", argv[2]);
../lab01/ex4.c:32:    printf("Copy done\n");
../lab01/ex4.c:9:        printf("Usage: %s <src> <dest>\n", argv[0]);
../lab02/my_cp.c:117:        fprintf(stderr, "Usage: %s <src> <dest>\n", argv[0]);
../lab02/my_cp.c:123:    printf("Copy done!\n");
../lab02/my_cp.c:16:        fprintf(stderr,"Error: on creatDir(%s)\n", path);
../lab02/my_cp.c:17:        fprintf(stderr, "%s\n", strerror(errno));
../lab02/my_cp.c:21:    printf("Created %s...\n", path);
../lab02/my_cp.c:30:        fprintf(stderr, "Error: %s can't be opened.\n", src);
../lab02/my_cp.c:31:        fprintf(stderr, "%s\n", strerror(errno));
../lab02/my_cp.c:37:        fprintf(stderr, "Error: %s can't be created.\n", dest);
../lab02/my_cp.c:38:        fprintf(stderr, "%s\n", strerror(errno));
../lab02/my_cp.c:49:            fprintf(stderr, "Error: on write.\n");
../lab02/my_cp.c:50:            fprintf(stderr, "%s\n", strerror(errno));
../lab02/my_cp.c:58:    printf("Copied %s to %s\n", src, dest);
../lab02/my_cp.c:77:    printf("Entering %s:\n", src_dir);
../lab02/my_cp.c:90:                printf("Recurring on %s:\n", de->d_name);
../lab02/my_cp.c:92:                printf("\n");
../lab02/my_ls.c:31:                printf("\n");
../lab02/my_ls.c:36:                printf("In %s:\t%s\n", dir_name, de->d_name); 
../lab02/my_ls.c:47:        fprintf(stderr, "Usage: %s <path>\n", argv[0]);
../lab03/cfg1.c:10:			printf ("%d\n", i);
../lab03/cfg1.c:12:	printf ("%d\n", i); 
../lab03/cfg2.c:10:            printf ("%d\n", i);
../lab03/cfg2.c:12:    printf ("%d\n", i);
../lab03/cfg3.c:11:	printf ("%d\n", i);
../lab03/cfg4.c:11:			printf ("%d\n", i);
../lab03/cfg4.c:9:			printf ("%d\n", -i);
../lab03/ex2.c:10:        fprintf(stderr, "Usage %s <n> <t>\n", argv[0]);
../lab03/ex2.c:27:    printf("%d returned from %d\n", getpid(), getppid());
../lab03/ex3.c:14:        printf("P4\n");
../lab03/ex3.c:19:        printf("P5\n");
../lab03/ex3.c:23:    printf("P7\n");
../lab03/ex3.c:28:    printf("P3\n");
../lab03/ex3.c:33:        printf("P6\n");
../lab03/ex3.c:39:    printf("P8\n");
../lab03/ex3.c:44:    printf("P1\n");
../lab03/ex3.c:58:    printf("P9\n");
../lab03/ex3.c:9:    printf("P2\n");
../lab03/lab03.txt:21:    printf ("%d\n", i);
../lab03/lab03.txt:23:printf ("%d\n", i);
../lab03/lab03.txt:28:    printf ("%d\n", i);
../lab03/lab03.txt:30:printf ("%d\n", i);
../lab03/lab03.txt:37:printf ("%d\n", i);
../lab03/lab03.txt:42:    printf ("%d\n", -i);
../lab03/lab03.txt:44:    printf ("%d\n", i);
../lab04/ex01.c:13:            sprintf (str, "echo system with i=%d", i);
../lab04/ex01.c:16:            sprintf (str, "exec with i=%d", i);
../lab04/ex02.c:11:            fprintf (stdout, "Running Exec ...");
../lab04/ex02.c:15:        fprintf (stdout, "Running System ...");
../lab04/ex03.c:14:        printf("Press ENTER to execute next command...");
../lab04/ex03.c:73:        printf("Press ENTER to execute next command...");
../lab04/ex03.c:82:        fprintf(stderr, "Usage %s 0/1 file\n", argv[0]);
../lab04/ex03.c:89:        fprintf(stderr, "Could not open %s\n", argv[2]);
../lab04/lab04.txt:31:      sprintf (str, "echo system with i=%d", i);
../lab04/lab04.txt:34:      sprintf (str, "exec with i=%d", i);
../lab04/lab04.txt:62:      fprintf (stdout, "Running Exec ...");
../lab04/lab04.txt:66:    fprintf (stdout, "Running System ...");
../lab05/ex1.c:13:            fprintf(stderr, "%d ", n);
../lab05/ex1.c:15:            printf("%d ", n);
../lab05/ex2.c:18:        fprintf(stderr, "Usage: %s <file>\n", argv[0]);
../lab05/ex2.c:25:        fprintf(stderr, "Error opening %s: %s\n", argv[1], strerror(errno));
../lab05/ex2.c:43:                    fprintf(stderr, "Error on 1 read got %d: %s\n", read_res, strerror(errno));
../lab05/ex2.c:50:                    fprintf(stderr, "Error on 2 read got %d: %s\n", read_res, strerror(errno));
../lab05/ex3.c:12:    printf("Father Woke-up\n");
../lab05/ex3.c:7:    printf("Child Woke-up\n");
../lab05/ex4.c:105:                fprintf(stderr, "Error on remove: %s\n", strerror(errno));
../lab05/ex4.c:107:            printf("\n[FATHER: exiting now...]\n");
../lab05/ex4.c:32:        printf("[BRO1: reading...] ");
../lab05/ex4.c:39:            fprintf(stderr, "Error on write: %s\n", strerror(errno));
../lab05/ex4.c:56:        printf("[BRO2: paused]\n");
../lab05/ex4.c:58:        printf("[BRO2: awaked]\n");
../lab05/ex4.c:65:            fprintf(stderr, "Error on read: %s\n", strerror(errno));
../lab05/ex4.c:72:        printf("%s", str);
../lab05/ex4.c:85:        fprintf(stderr, "Error on open: %s\n", strerror(errno));
../lab05/ex4.c:94:        printf("[FATHER: born bro1]\n");
../lab05/ex4.c:98:            printf("[FATHER: born bro2]\n\n");
../lab05/generate_data.c:13:        fprintf(stderr, "Usage: %s <file>\n", argv[0]);
../lab05/lab05ex02.c:18:    fprintf (stderr, "usage: %s fileName\n", argv[0]);
../lab05/lab05ex02.c:28:    fprintf(stderr, "Cannot create file %s\n", argv[1]);
../lab05/lab05ex02.c:32:  fprintf (stdout, "Reading: ");
../lab05/lab05ex02.c:35:    fprintf (stdout, "%2d ", vet[i]);
../lab05/lab05ex02.c:37:  fprintf (stdout, "\n");
../lab05/lab05ex02.c:47:    fprintf(stderr,"Cannot open file %s\n", argv[1]);
../lab05/lab05ex02.c:51:  fprintf (stdout, "Reading: ");
../lab05/lab05ex02.c:56:      fprintf (stderr, "Error reading file\n");
../lab05/lab05ex02.c:59:    fprintf (stdout, "%2d ", val);
../lab05/lab05ex02.c:61:  fprintf (stdout, "\n");
../lab05/lab05.txt:17:fprintf (stdout, ...);
../lab05/lab05.txt:19:fprintf (stderr, ...);
../lab06/ex1.c:101:        printf("[FATHER: born bro1]\n");
../lab06/ex1.c:105:            printf("[FATHER: born bro2]\n");
../lab06/ex1.c:111:                fprintf(stderr, "[FATHER]: error on close 0: %s\n", strerror(errno));
../lab06/ex1.c:117:                fprintf(stderr, "[FATHER]: error on close 1: %s\n", strerror(errno));
../lab06/ex1.c:121:            printf("[FATHER]: exiting...\n");
../lab06/ex1.c:25:        printf("[BRO1]: reading... ");
../lab06/ex1.c:35:            fprintf(stderr, "[BRO1]: Error on write 1: %s\n", strerror(errno));
../lab06/ex1.c:41:            fprintf(stderr, "[BRO1]: Error on write 2: %s\n", strerror(errno));
../lab06/ex1.c:47:            printf("[BRO1: exiting...]\n");
../lab06/ex1.c:63:            fprintf(stderr, "[BRO2]: Error on read 1: %s\n", strerror(errno));
../lab06/ex1.c:69:            fprintf(stderr, "[BRO2]: Error on read 2: %s\n", strerror(errno));
../lab06/ex1.c:77:            printf("[BRO2]: exiting...\n");
../lab06/ex1.c:83:        printf("[BRO2]: writing... ");
../lab06/ex1.c:84:        printf("%s\n", str);
../lab06/ex1.c:95:        fprintf(stderr, "[FATHER]: error on pipe: %s\n", strerror(errno));
../lab06/ex2.c:13:        fprintf(stderr, "Error on pipe1: %s\n", strerror(errno));
../lab06/ex2.c:19:        fprintf(stderr, "Error on pipe2: %s\n", strerror(errno));
../lab06/ex2.c:39:            printf("I'm the father\n");
../lab06/ex2.c:43:                fprintf(stderr, "Error on par_write: %s\n", strerror(errno));
../lab06/ex2.c:49:                fprintf(stderr, "Error on par_read: %s\n", strerror(errno));
../lab06/ex2.c:64:                fprintf(stderr, "Error on cld_read: %s\n", strerror(errno));
../lab06/ex2.c:68:            printf("I'm the child\n");
../lab06/ex2.c:72:                fprintf(stderr, "Error on cld_write: %s\n", strerror(errno));
../lab07/ex1.c:17:        printf("Allocatin Error.\n");
../lab07/ex1.c:21:    printf("Binary Numbers:\n");
../lab07/ex1.c:34:            printf("%d", vet[j]);
../lab07/ex1.c:36:        printf("\n");
../lab07/ex2.c:46:        fprintf(out, "%d\n", vet[i]);
../lab07/ex2.c:56:        fprintf(stderr, "Usage %s <n> <strA> <strB>\n", argv[0]);
../lab07/ex2.c:67:        sprintf(tmp, "%d.txt", i);
../lab07/ex3.c:102:        fprintf(out, "%d\n", res[i]);
../lab07/ex3.c:71:        fprintf(stderr, "Usage %s <n> <strA> <strB>\n", argv[0]);
../lab07/ex3.c:84:        sprintf(file_names[i], "%s%d.txt", argv[2], i);
../lab07/lab07e01recursive.c:15:        printf("Allocatin Error.\n");
../lab07/lab07e01recursive.c:19:    printf("Binary Numbers:\n");
../lab07/lab07e01recursive.c:32:            printf("%d", vet[j]);
../lab07/lab07e01recursive.c:34:        printf("\n");
